{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth != null && (auth.uid == $uid || root.child('admins').child(auth.uid).exists())",
        ".write": "auth != null && (auth.uid == $uid || root.child('admins').child(auth.uid).exists())",
        ".validate": "newData.hasChildren(['telegramId', 'balance', 'totalEarned'])"
      }
    },
    "withdrawals": {
      ".read": "auth != null && root.child('admins').child(auth.uid).exists()",
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
      "$withdrawalId": {
        ".validate": "newData.hasChildren(['telegramId', 'amount', 'binanceUid', 'status'])"
      }
    },
    "tasks": {
      ".read": true,
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
      "$taskId": {
        ".validate": "newData.hasChildren(['title', 'link', 'reward', 'category', 'verificationType'])"
      }
    },
    "admins": {
      "$adminId": {
        ".read": "auth != null && auth.uid == $adminId",
        ".write": false
      }
    },
    "referrals": {
      ".read": "auth != null",
      ".write": "auth != null",
      "$referralId": {
        ".validate": "newData.hasChildren(['referrerId', 'newUserId', 'timestamp'])"
      }
    },
    "transactions": {
      "$uid": {
        ".read": "auth != null && (auth.uid == $uid || root.child('admins').child(auth.uid).exists())",
        ".write": "auth != null && (auth.uid == $uid || root.child('admins').child(auth.uid).exists())"
      }
    },
    "app_settings": {
      ".read": true,
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()"
    }
  }
}
